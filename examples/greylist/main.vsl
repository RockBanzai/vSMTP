/// Here is a really simple greylist implementation.
/// The goal of a greylist is to temporarily reject a transaction from a new sender.
/// If the mail is legitimate, the originating server will (most of the time) try again after a delay.
import "csv_greylist" as gl;

// A function that reproduce a greylist behavior.
fn greylist(greylist) {
    // if the sender is not recognized in our database (no records found),
    // we deny the transaction and write the sender into the database.
    if greylist.get(mail_from()) == [] {
        greylist.set([mail_from().to_string()]);
        deny()
    } else {
        // the user is known by the server, the transaction
        // can proceed.
        accept()
    }
}

#{
    mail: [
        rule "greylist" || greylist(gl::csv_greylist),
    ],
}
