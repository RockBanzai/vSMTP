name: CI

on:
  # push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
    RUSTFLAGS: -Dwarnings
    RUST_BACKTRACE: 1
    # Change to specific Rust release to pin
    rust_stable: stable
    rust_nightly: nightly-2023-08-03
    rust_clippy: 1.71.1
    rust_min: 1.71.1

jobs:
  # Basic actions that must pass before we kick off more expensive tests.
  basics:
    name: basic checks
    runs-on: ubuntu-latest
    needs:
      - clippy
      - fmt
      - docs
      - minrust
    steps:
      - run: exit 0

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt update && sudo apt install protobuf-compiler -y
      - name: Install Rust ${{ env.rust_clippy }}
        uses: dtolnay/rust-toolchain@1.80
        with:
          toolchain: ${{ env.rust_clippy }}
          components: clippy
      - uses: Swatinem/rust-cache@v2
      # Run clippy
      - run: cargo clippy --all --tests --all-features --no-deps

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt update && sudo apt install protobuf-compiler -y
      - name: Install Rust ${{ env.rust_stable }}
        uses: dtolnay/rust-toolchain@1.80
        with:
          toolchain: ${{ env.rust_stable }}
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --check

  docs:
      name: docs
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - run: sudo apt update && sudo apt install protobuf-compiler -y
        - name: Install Rust ${{ env.rust_nightly }}
          uses: dtolnay/rust-toolchain@1.80
          with:
            toolchain: ${{ env.rust_nightly }}
        - uses: Swatinem/rust-cache@v2
        - run: cargo doc --workspace --no-deps --all-features --document-private-items
          env:
            RUSTFLAGS: --cfg docsrs
            RUSTDOCFLAGS: --cfg docsrs -Dwarnings

  minrust:
    name: minrust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt update && sudo apt install protobuf-compiler -y
      - name: Install Rust ${{ env.rust_min }}
        uses: dtolnay/rust-toolchain@1.80
        with:
          toolchain: ${{ env.rust_min }}
      - uses: Swatinem/rust-cache@v2
      - run: cargo check --workspace --all-features
